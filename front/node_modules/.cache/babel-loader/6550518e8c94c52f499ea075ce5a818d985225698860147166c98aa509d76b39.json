{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [historicalRate, setHistoricalRate] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    // Fetch current exchange rates for USD, EUR, BTC to ARS\n    fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=usd,bitcoin,euro&vs_currencies=ars\").then(response => response.json()).then(data => setExchangeRates({\n      USD: data.usd.ars,\n      BTC: data.bitcoin.ars,\n      EUR: data.euro.ars\n    }));\n  }, []);\n  const formatNumber = num => {\n    return num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n  const handleChange = e => {\n    let value = e.target.value.replace(/\\./g, \"\");\n    if (value === \"\") {\n      setAmount(\"\");\n    } else if (!isNaN(value)) {\n      value = parseInt(value).toString();\n      setAmount(formatNumber(value));\n    }\n  };\n  const calculateAmount = (value, rate) => {\n    const numericValue = value ? parseInt(value.replace(/\\./g, \"\")) : 0;\n    if (numericValue === 0) return rate ? formatNumber(rate.toFixed(0)) : \"0\";\n    return (numericValue * rate).toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    if (date) {\n      const formattedDate = date.toISOString().split(\"T\")[0];\n      // Fetch historical rate (Example for USD to ARS on selected date)\n      fetch(`https://api.coingecko.com/api/v3/coins/usd/history?date=${formattedDate}`).then(response => response.json()).then(data => {\n        if (data && data.market_data) {\n          setHistoricalRate({\n            USD: data.market_data.current_price.ars\n          });\n        } else {\n          setHistoricalRate(null);\n        }\n      });\n    } else {\n      setHistoricalRate(null); // Clear historical rate if date is cleared\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: amount,\n      onChange: handleChange,\n      placeholder: \"Enter Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"USD to ARS: \", calculateAmount(amount, exchangeRates.USD), \" ARS\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"BTC to ARS: \", calculateAmount(amount, exchangeRates.BTC), \" ARS\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"EUR to ARS: \", calculateAmount(amount, exchangeRates.EUR), \" ARS\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Date for Historical Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: handleDateChange,\n      dateFormat: \"yyyy-MM-dd\",\n      maxDate: new Date(),\n      placeholderText: \"Select a date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), historicalRate && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Historical Exchange Rate on\", \" \", selectedDate.toISOString().split(\"T\")[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"USD to ARS: \", formatNumber(historicalRate.USD.toFixed(0)), \" ARS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"3Gq0/XVZdEnmpQvNpE9Sh3Xqgts=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsxDEV","_jsxDEV","CurrencyConverter","_s","amount","setAmount","exchangeRates","setExchangeRates","historicalRate","setHistoricalRate","selectedDate","setSelectedDate","fetch","then","response","json","data","USD","usd","ars","BTC","bitcoin","EUR","euro","formatNumber","num","replace","handleChange","e","value","target","isNaN","parseInt","toString","calculateAmount","rate","numericValue","toFixed","handleDateChange","date","formattedDate","toISOString","split","market_data","current_price","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","selected","dateFormat","maxDate","Date","placeholderText","_c","$RefreshReg$"],"sources":["/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst CurrencyConverter = () => {\n  const [amount, setAmount] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [historicalRate, setHistoricalRate] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Fetch current exchange rates for USD, EUR, BTC to ARS\n    fetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=usd,bitcoin,euro&vs_currencies=ars\"\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        setExchangeRates({\n          USD: data.usd.ars,\n          BTC: data.bitcoin.ars,\n          EUR: data.euro.ars,\n        })\n      );\n  }, []);\n\n  const formatNumber = (num) => {\n    return num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n\n  const handleChange = (e) => {\n    let value = e.target.value.replace(/\\./g, \"\");\n    if (value === \"\") {\n      setAmount(\"\");\n    } else if (!isNaN(value)) {\n      value = parseInt(value).toString();\n      setAmount(formatNumber(value));\n    }\n  };\n\n  const calculateAmount = (value, rate) => {\n    const numericValue = value ? parseInt(value.replace(/\\./g, \"\")) : 0;\n    if (numericValue === 0) return rate ? formatNumber(rate.toFixed(0)) : \"0\";\n    return (numericValue * rate)\n      .toFixed(0)\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n\n    if (date) {\n      const formattedDate = date.toISOString().split(\"T\")[0];\n      // Fetch historical rate (Example for USD to ARS on selected date)\n      fetch(\n        `https://api.coingecko.com/api/v3/coins/usd/history?date=${formattedDate}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data && data.market_data) {\n            setHistoricalRate({\n              USD: data.market_data.current_price.ars,\n            });\n          } else {\n            setHistoricalRate(null);\n          }\n        });\n    } else {\n      setHistoricalRate(null); // Clear historical rate if date is cleared\n    }\n  };\n\n  return (\n    <div>\n      <h2>Currency Converter</h2>\n      <input\n        type=\"text\"\n        value={amount}\n        onChange={handleChange}\n        placeholder=\"Enter Amount\"\n      />\n      <br />\n      <br />\n      <p>USD to ARS: {calculateAmount(amount, exchangeRates.USD)} ARS</p>\n      <p>BTC to ARS: {calculateAmount(amount, exchangeRates.BTC)} ARS</p>\n      <p>EUR to ARS: {calculateAmount(amount, exchangeRates.EUR)} ARS</p>\n\n      <h3>Select Date for Historical Rate</h3>\n      <DatePicker\n        selected={selectedDate}\n        onChange={handleDateChange}\n        dateFormat=\"yyyy-MM-dd\"\n        maxDate={new Date()}\n        placeholderText=\"Select a date\"\n      />\n\n      {historicalRate && (\n        <div>\n          <h4>\n            Historical Exchange Rate on{\" \"}\n            {selectedDate.toISOString().split(\"T\")[0]}\n          </h4>\n          <p>USD to ARS: {formatNumber(historicalRate.USD.toFixed(0))} ARS</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CurrencyConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}