{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpascual/Documents/sites/investify/src/Components/ChatBot/ChatBot.jsx\",\n  _s = $RefreshSig$();\n// Chatbot.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n    const newMessages = [...messages, {\n      sender: 'user',\n      text: userInput\n    }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n\n    // Call to backend API or function to process the input\n    const response = await getChatbotResponse(userInput);\n    setMessages([...newMessages, {\n      sender: 'bot',\n      text: response\n    }]);\n  };\n  const getChatbotResponse = async input => {\n    // Here we will process the input: check if it's related to prices, Messi, etc.\n    // Let's start with checking if it's a price request.\n\n    if (input.toLowerCase().includes(\"btc\") || input.toLowerCase().includes(\"bitcoin\")) {\n      return await fetchBTCPrice();\n    }\n    if (input.toLowerCase().includes(\"messi\")) {\n      return \"¡Messi! El crack argentino. Es uno de los futbolistas más famosos del mundo. ¿Quieres saber más sobre él o prefieres algo sobre criptos?\";\n    }\n\n    // Default fallback: call to Wikipedia API for general knowledge.\n    return await fetchWikipediaInfo(input);\n  };\n  const fetchBTCPrice = async () => {\n    const res = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\");\n    const data = await res.json();\n    return `El precio de Bitcoin es $${data.bitcoin.usd} USD.`;\n  };\n  const fetchWikipediaInfo = async query => {\n    const res = await fetch(`https://es.wikipedia.org/w/api.php?action=query&format=json&titles=${encodeURIComponent(query)}&prop=extracts&exintro&explaintext`);\n    const data = await res.json();\n    const page = Object.values(data.query.pages)[0];\n    return page.extract ? page.extract : `No pude encontrar información sobre \"${query}\" en Wikipedia. ¿Te interesa saber otra cosa?`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: handleInputChange,\n      onKeyPress: e => e.key === \"Enter\" ? sendMessage() : null,\n      placeholder: \"Escribe algo...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"1zGRC38DTEORNFfajD4oL7sdkj8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userInput","setUserInput","handleInputChange","e","target","value","sendMessage","trim","newMessages","sender","text","response","getChatbotResponse","input","toLowerCase","includes","fetchBTCPrice","fetchWikipediaInfo","res","fetch","data","json","bitcoin","usd","query","encodeURIComponent","page","Object","values","pages","extract","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/manuelpascual/Documents/sites/investify/src/Components/ChatBot/ChatBot.jsx"],"sourcesContent":["// Chatbot.js\nimport React, { useState } from 'react';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    const newMessages = [...messages, { sender: 'user', text: userInput }];\n    setMessages(newMessages);\n    setUserInput(\"\");\n\n    // Call to backend API or function to process the input\n    const response = await getChatbotResponse(userInput);\n    setMessages([...newMessages, { sender: 'bot', text: response }]);\n  };\n\n  const getChatbotResponse = async (input) => {\n    // Here we will process the input: check if it's related to prices, Messi, etc.\n    // Let's start with checking if it's a price request.\n    \n    if (input.toLowerCase().includes(\"btc\") || input.toLowerCase().includes(\"bitcoin\")) {\n      return await fetchBTCPrice();\n    }\n\n    if (input.toLowerCase().includes(\"messi\")) {\n      return \"¡Messi! El crack argentino. Es uno de los futbolistas más famosos del mundo. ¿Quieres saber más sobre él o prefieres algo sobre criptos?\";\n    }\n\n    // Default fallback: call to Wikipedia API for general knowledge.\n    return await fetchWikipediaInfo(input);\n  };\n\n  const fetchBTCPrice = async () => {\n    const res = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\");\n    const data = await res.json();\n    return `El precio de Bitcoin es $${data.bitcoin.usd} USD.`;\n  };\n\n  const fetchWikipediaInfo = async (query) => {\n    const res = await fetch(`https://es.wikipedia.org/w/api.php?action=query&format=json&titles=${encodeURIComponent(query)}&prop=extracts&exintro&explaintext`);\n    const data = await res.json();\n    const page = Object.values(data.query.pages)[0];\n    return page.extract ? page.extract : `No pude encontrar información sobre \"${query}\" en Wikipedia. ¿Te interesa saber otra cosa?`;\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.sender}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={userInput}\n        onChange={handleInputChange}\n        onKeyPress={(e) => e.key === \"Enter\" ? sendMessage() : null}\n        placeholder=\"Escribe algo...\"\n      />\n      <button onClick={sendMessage}>Enviar</button>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}