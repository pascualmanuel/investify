{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  var _dolar$blue, _dolar$blue2;\n  const [amount, setAmount] = useState(\"\");\n  const [dolar, setDolar] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.bluelytics.com.ar/v2/latest\").then(response => response.json()).then(data => setDolar(data));\n  }, []);\n  const exchangeRateSell = dolar === null || dolar === void 0 ? void 0 : (_dolar$blue = dolar.blue) === null || _dolar$blue === void 0 ? void 0 : _dolar$blue.value_sell;\n  const exchangeRateBuy = dolar === null || dolar === void 0 ? void 0 : (_dolar$blue2 = dolar.blue) === null || _dolar$blue2 === void 0 ? void 0 : _dolar$blue2.value_buy;\n  const formatNumber = num => {\n    return num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n  const handleChange = e => {\n    let value = e.target.value.replace(/\\./g, \"\"); // Remove existing dots\n    if (value === \"\") {\n      setAmount(\"\"); // Clear the input\n    } else if (!isNaN(value)) {\n      value = parseInt(value).toString(); // Convert back to string without leading zeros\n      setAmount(formatNumber(value));\n    }\n  };\n  const calculateAmount = (value, rate) => {\n    const numericValue = parseInt(value.replace(/\\./g, \"\"));\n    if (isNaN(numericValue)) return \"\";\n    return numericValue ? (numericValue * rate).toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") : \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: amount,\n      onChange: handleChange,\n      placeholder: \"USD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [amount || \"1\", \" USD Compra = \", calculateAmount(amount, exchangeRateBuy), \"ARS\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), amount || \"1\", \" USD Venta = \", calculateAmount(amount, exchangeRateSell), \" \", \"ARS\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"GlKE3PoJNi7ttSmWI263FRy1xDE=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CurrencyConverter","_s","_dolar$blue","_dolar$blue2","amount","setAmount","dolar","setDolar","fetch","then","response","json","data","exchangeRateSell","blue","value_sell","exchangeRateBuy","value_buy","formatNumber","num","replace","handleChange","e","value","target","isNaN","parseInt","toString","calculateAmount","rate","numericValue","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyConverter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst CurrencyConverter = () => {\n  const [amount, setAmount] = useState(\"\");\n  const [dolar, setDolar] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://api.bluelytics.com.ar/v2/latest\")\n      .then((response) => response.json())\n      .then((data) => setDolar(data));\n  }, []);\n\n  const exchangeRateSell = dolar?.blue?.value_sell;\n  const exchangeRateBuy = dolar?.blue?.value_buy;\n\n  const formatNumber = (num) => {\n    return num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n\n  const handleChange = (e) => {\n    let value = e.target.value.replace(/\\./g, \"\"); // Remove existing dots\n    if (value === \"\") {\n      setAmount(\"\"); // Clear the input\n    } else if (!isNaN(value)) {\n      value = parseInt(value).toString(); // Convert back to string without leading zeros\n      setAmount(formatNumber(value));\n    }\n  };\n\n  const calculateAmount = (value, rate) => {\n    const numericValue = parseInt(value.replace(/\\./g, \"\"));\n    if (isNaN(numericValue)) return \"\";\n    return numericValue\n      ? (numericValue * rate).toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\n      : \"\";\n  };\n\n  return (\n    <div>\n      <h2>Currency Converter</h2>\n      <input\n        type=\"text\"\n        value={amount}\n        onChange={handleChange}\n        placeholder=\"USD\"\n      />\n      <p>\n        {amount || \"1\"} USD Compra = {calculateAmount(amount, exchangeRateBuy)}\n        ARS\n        <br />\n        <br />\n        {amount || \"1\"} USD Venta = {calculateAmount(amount, exchangeRateSell)}{\" \"}\n        ARS\n      </p>\n    </div>\n  );\n};\n\nexport default CurrencyConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}