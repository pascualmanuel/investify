{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bot = () => {\n  _s();\n  const [userInput, setUserInput] = useState(\"\");\n  const [botResponse, setBotResponse] = useState(\"\");\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const queryWitAI = async message => {\n    const response = await fetch(`https://api.wit.ai/message?v=20220101&q=${encodeURIComponent(message)}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_WITAI_SERVER_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  };\n  const fetchBTCPrice = async () => {\n    const response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\");\n    const data = await response.json();\n    return data.bitcoin.usd;\n  };\n  const fetchETHPrice = async () => {\n    const response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\");\n    const data = await response.json();\n    return data.ethereum.usd;\n  };\n  const fetchHistoricalPrice = async date => {\n    const response = await fetch(`${process.env.REACT_APP_BLUELYTICS_API_URL}?day=${date}`);\n    const data = await response.json();\n    return data.blue.value_sell;\n  };\n  const fetchDolarBlueToday = async () => {\n    const response = await fetch(\"https://api.bluelytics.com.ar/v2/latest\");\n    const data = await response.json();\n    return data.blue.value_sell;\n  };\n  const handleBotResponse = async () => {\n    var _witResponse$intents$;\n    const witResponse = await queryWitAI(userInput);\n    const intent = (_witResponse$intents$ = witResponse.intents[0]) === null || _witResponse$intents$ === void 0 ? void 0 : _witResponse$intents$.name;\n    const entities = witResponse.entities;\n    let response = \"Lo siento, no entendí eso.\";\n    if (intent === \"precio_actual\") {\n      var _entities$moneda, _entities$moneda$, _entities$moneda2, _entities$moneda2$;\n      if (((_entities$moneda = entities.moneda) === null || _entities$moneda === void 0 ? void 0 : (_entities$moneda$ = _entities$moneda[0]) === null || _entities$moneda$ === void 0 ? void 0 : _entities$moneda$.value) === \"BTC\") {\n        const price = await fetchBTCPrice();\n        response = `El precio actual de BTC es ${price} USD.`;\n      } else if (((_entities$moneda2 = entities.moneda) === null || _entities$moneda2 === void 0 ? void 0 : (_entities$moneda2$ = _entities$moneda2[0]) === null || _entities$moneda2$ === void 0 ? void 0 : _entities$moneda2$.value) === \"ETH\") {\n        const price = await fetchETHPrice();\n        response = `El precio actual de ETH es ${price} USD.`;\n      }\n    } else if (intent === \"cotizacion_historica\") {\n      var _entities$moneda3, _entities$moneda3$, _entities$fecha, _entities$fecha$;\n      const moneda = (_entities$moneda3 = entities.moneda) === null || _entities$moneda3 === void 0 ? void 0 : (_entities$moneda3$ = _entities$moneda3[0]) === null || _entities$moneda3$ === void 0 ? void 0 : _entities$moneda3$.value;\n      const fecha = (_entities$fecha = entities.fecha) === null || _entities$fecha === void 0 ? void 0 : (_entities$fecha$ = _entities$fecha[0]) === null || _entities$fecha$ === void 0 ? void 0 : _entities$fecha$.value;\n      if (moneda && fecha) {\n        const historicalPrice = await fetchHistoricalPrice(fecha);\n        response = `El precio de ${moneda} el ${fecha} era de ${historicalPrice} ARS.`;\n      }\n    }\n    setBotResponse(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: handleInputChange,\n        placeholder: \"Escribe tu pregunta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBotResponse,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Respuesta del Bot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \" \", botResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Bot, \"oyD4qbeRle8lnvf7sEigMPOoMSc=\");\n_c = Bot;\nexport default Bot;\nvar _c;\n$RefreshReg$(_c, \"Bot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Bot","_s","userInput","setUserInput","botResponse","setBotResponse","handleInputChange","event","target","value","queryWitAI","message","response","fetch","encodeURIComponent","method","headers","Authorization","process","env","REACT_APP_WITAI_SERVER_TOKEN","data","json","fetchBTCPrice","bitcoin","usd","fetchETHPrice","ethereum","fetchHistoricalPrice","date","REACT_APP_BLUELYTICS_API_URL","blue","value_sell","fetchDolarBlueToday","handleBotResponse","_witResponse$intents$","witResponse","intent","intents","name","entities","_entities$moneda","_entities$moneda$","_entities$moneda2","_entities$moneda2$","moneda","price","_entities$moneda3","_entities$moneda3$","_entities$fecha","_entities$fecha$","fecha","historicalPrice","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyChatBot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Bot = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [botResponse, setBotResponse] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const queryWitAI = async (message) => {\n    const response = await fetch(\n      `https://api.wit.ai/message?v=20220101&q=${encodeURIComponent(message)}`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_WITAI_SERVER_TOKEN}`,\n        },\n      }\n    );\n\n    const data = await response.json();\n    return data;\n  };\n\n  const fetchBTCPrice = async () => {\n    const response = await fetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n    );\n    const data = await response.json();\n    return data.bitcoin.usd;\n  };\n\n  const fetchETHPrice = async () => {\n    const response = await fetch(\n      \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\n    );\n    const data = await response.json();\n    return data.ethereum.usd;\n  };\n\n  const fetchHistoricalPrice = async (date) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_BLUELYTICS_API_URL}?day=${date}`\n    );\n    const data = await response.json();\n    return data.blue.value_sell;\n  };\n\n  const fetchDolarBlueToday = async () => {\n    const response = await fetch(\"https://api.bluelytics.com.ar/v2/latest\");\n    const data = await response.json();\n    return data.blue.value_sell;\n  };\n\n  const handleBotResponse = async () => {\n    const witResponse = await queryWitAI(userInput);\n    const intent = witResponse.intents[0]?.name;\n    const entities = witResponse.entities;\n    let response = \"Lo siento, no entendí eso.\";\n\n    if (intent === \"precio_actual\") {\n      if (entities.moneda?.[0]?.value === \"BTC\") {\n        const price = await fetchBTCPrice();\n        response = `El precio actual de BTC es ${price} USD.`;\n      } else if (entities.moneda?.[0]?.value === \"ETH\") {\n        const price = await fetchETHPrice();\n        response = `El precio actual de ETH es ${price} USD.`;\n      }\n    } else if (intent === \"cotizacion_historica\") {\n      const moneda = entities.moneda?.[0]?.value;\n      const fecha = entities.fecha?.[0]?.value;\n      if (moneda && fecha) {\n        const historicalPrice = await fetchHistoricalPrice(fecha);\n        response = `El precio de ${moneda} el ${fecha} era de ${historicalPrice} ARS.`;\n      }\n    }\n\n    setBotResponse(response);\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={handleInputChange}\n          placeholder=\"Escribe tu pregunta\"\n        />\n        <button onClick={handleBotResponse}>Enviar</button>\n      </div>\n      <div>\n        <p>\n          <strong>Respuesta del Bot:</strong> {botResponse}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Bot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}