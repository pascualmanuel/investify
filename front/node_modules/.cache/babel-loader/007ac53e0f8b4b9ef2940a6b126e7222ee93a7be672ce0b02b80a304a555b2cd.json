{"ast":null,"code":"// src/App.js\nimport React,{useState,useEffect}from\"react\";import axios from\"axios\";import InvestmentForm from\"./Components/InvestmentForm\";import InvestmentList from\"./Components/InvestmentList\";import InvestmentChart from\"./Components/InvestmentChart\";import\"./Styles/App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[investments,setInvestments]=useState([]);const[chartData,setChartData]=useState([]);const addInvestment=async investment=>{try{var _response$data$market,_response$data$market2;const formattedDate=investment.date.split(\"-\").reverse().join(\"-\");const response=await axios.get(`https://api.coingecko.com/api/v3/coins/${investment.crypto.toLowerCase()}/history?date=${formattedDate}`);const price=((_response$data$market=response.data.market_data)===null||_response$data$market===void 0?void 0:(_response$data$market2=_response$data$market.current_price)===null||_response$data$market2===void 0?void 0:_response$data$market2.usd)||0;// Manejar caso si `current_price` no est치 presente\nconst newInvestment={...investment,price};setInvestments([...investments,newInvestment]);}catch(error){console.error(\"Error fetching the crypto data:\",error.message);}};useEffect(()=>{// Transformar los datos de inversiones en el formato adecuado para el gr치fico\nconst data=investments.map((inv,index)=>({name:inv.crypto,amount:inv.amount*inv.price}));setChartData(data);},[investments]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Simulador de Inversiones\"}),/*#__PURE__*/_jsx(InvestmentForm,{addInvestment:addInvestment}),/*#__PURE__*/_jsx(InvestmentList,{investments:investments}),/*#__PURE__*/_jsx(InvestmentChart,{data:chartData})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","InvestmentForm","InvestmentList","InvestmentChart","jsx","_jsx","jsxs","_jsxs","App","investments","setInvestments","chartData","setChartData","addInvestment","investment","_response$data$market","_response$data$market2","formattedDate","date","split","reverse","join","response","get","crypto","toLowerCase","price","data","market_data","current_price","usd","newInvestment","error","console","message","map","inv","index","name","amount","className","children"],"sources":["/Users/manuelpascual/Documents/sites/investify/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InvestmentForm from \"./Components/InvestmentForm\";\nimport InvestmentList from \"./Components/InvestmentList\";\nimport InvestmentChart from \"./Components/InvestmentChart\";\nimport \"./Styles/App.css\";\n\nfunction App() {\n  const [investments, setInvestments] = useState([]);\n  const [chartData, setChartData] = useState([]);\n\n  const addInvestment = async (investment) => {\n    try {\n      const formattedDate = investment.date.split(\"-\").reverse().join(\"-\");\n      const response = await axios.get(\n        `https://api.coingecko.com/api/v3/coins/${investment.crypto.toLowerCase()}/history?date=${formattedDate}`\n      );\n      const price = response.data.market_data?.current_price?.usd || 0; // Manejar caso si `current_price` no est치 presente\n      const newInvestment = {\n        ...investment,\n        price,\n      };\n      setInvestments([...investments, newInvestment]);\n    } catch (error) {\n      console.error(\"Error fetching the crypto data:\", error.message);\n    }\n  };\n\n  useEffect(() => {\n    // Transformar los datos de inversiones en el formato adecuado para el gr치fico\n    const data = investments.map((inv, index) => ({\n      name: inv.crypto,\n      amount: inv.amount * inv.price,\n    }));\n    setChartData(data);\n  }, [investments]);\n\n  return (\n    <div className=\"App\">\n      <h1>Simulador de Inversiones</h1>\n      <InvestmentForm addInvestment={addInvestment} />\n      <InvestmentList investments={investments} />\n      <InvestmentChart data={chartData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAe,aAAa,CAAG,KAAO,CAAAC,UAAU,EAAK,CAC1C,GAAI,KAAAC,qBAAA,CAAAC,sBAAA,CACF,KAAM,CAAAC,aAAa,CAAGH,UAAU,CAACI,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CACpE,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAtB,KAAK,CAACuB,GAAG,CAC9B,0CAA0CT,UAAU,CAACU,MAAM,CAACC,WAAW,CAAC,CAAC,iBAAiBR,aAAa,EACzG,CAAC,CACD,KAAM,CAAAS,KAAK,CAAG,EAAAX,qBAAA,CAAAO,QAAQ,CAACK,IAAI,CAACC,WAAW,UAAAb,qBAAA,kBAAAC,sBAAA,CAAzBD,qBAAA,CAA2Bc,aAAa,UAAAb,sBAAA,iBAAxCA,sBAAA,CAA0Cc,GAAG,GAAI,CAAC,CAAE;AAClE,KAAM,CAAAC,aAAa,CAAG,CACpB,GAAGjB,UAAU,CACbY,KACF,CAAC,CACDhB,cAAc,CAAC,CAAC,GAAGD,WAAW,CAAEsB,aAAa,CAAC,CAAC,CACjD,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAACE,OAAO,CAAC,CACjE,CACF,CAAC,CAEDnC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAA4B,IAAI,CAAGlB,WAAW,CAAC0B,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAM,CAC5CC,IAAI,CAAEF,GAAG,CAACZ,MAAM,CAChBe,MAAM,CAAEH,GAAG,CAACG,MAAM,CAAGH,GAAG,CAACV,KAC3B,CAAC,CAAC,CAAC,CACHd,YAAY,CAACe,IAAI,CAAC,CACpB,CAAC,CAAE,CAAClB,WAAW,CAAC,CAAC,CAEjB,mBACEF,KAAA,QAAKiC,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBpC,IAAA,OAAAoC,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjCpC,IAAA,CAACJ,cAAc,EAACY,aAAa,CAAEA,aAAc,CAAE,CAAC,cAChDR,IAAA,CAACH,cAAc,EAACO,WAAW,CAAEA,WAAY,CAAE,CAAC,cAC5CJ,IAAA,CAACF,eAAe,EAACwB,IAAI,CAAEhB,SAAU,CAAE,CAAC,EACjC,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}