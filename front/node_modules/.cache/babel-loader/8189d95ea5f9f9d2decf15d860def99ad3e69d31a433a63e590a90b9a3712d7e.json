{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpascual/Documents/sites/investify/front/src/Components/YoutubeDownloader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoDownloader = () => {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleDownload = async () => {\n    if (!url) {\n      setError(\"Por favor ingresa una URL.\");\n      return;\n    }\n    setIsDownloading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:4000/download\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setDownloadLink(data.videoUrl); // Aquí deberías devolver la URL del video\n      } else {\n        setError(\"Hubo un error al procesar la descarga.\");\n      }\n    } catch (err) {\n      setError(\"Error al conectar con el servidor.\");\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Descargar Video de YouTube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      placeholder: \"Ingresa la URL del video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      disabled: isDownloading,\n      children: isDownloading ? \"Descargando...\" : \"Descargar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Video listo para descargar:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadLink,\n        download: true,\n        children: \"Haz clic aqu\\xED para descargar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoDownloader, \"JT9cgi/fzKU7zyoPxpJ2tzKywAk=\");\n_c = VideoDownloader;\nexport default VideoDownloader;\nvar _c;\n$RefreshReg$(_c, \"VideoDownloader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VideoDownloader","_s","url","setUrl","isDownloading","setIsDownloading","downloadLink","setDownloadLink","error","setError","handleDownload","response","fetch","method","headers","body","JSON","stringify","data","json","success","videoUrl","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","style","color","href","download","_c","$RefreshReg$"],"sources":["/Users/manuelpascual/Documents/sites/investify/front/src/Components/YoutubeDownloader.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst VideoDownloader = () => {\n  const [url, setUrl] = useState(\"\");\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleDownload = async () => {\n    if (!url) {\n      setError(\"Por favor ingresa una URL.\");\n      return;\n    }\n\n    setIsDownloading(true);\n    setError(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:4000/download\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ url }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        setDownloadLink(data.videoUrl); // Aquí deberías devolver la URL del video\n      } else {\n        setError(\"Hubo un error al procesar la descarga.\");\n      }\n    } catch (err) {\n      setError(\"Error al conectar con el servidor.\");\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Descargar Video de YouTube</h2>\n      <input\n        type=\"text\"\n        value={url}\n        onChange={(e) => setUrl(e.target.value)}\n        placeholder=\"Ingresa la URL del video\"\n      />\n      <button onClick={handleDownload} disabled={isDownloading}>\n        {isDownloading ? \"Descargando...\" : \"Descargar\"}\n      </button>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {downloadLink && (\n        <div>\n          <p>Video listo para descargar:</p>\n          <a href={downloadLink} download>\n            Haz clic aquí para descargar\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoDownloader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACR,GAAG,EAAE;MACRO,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IAEAJ,gBAAgB,CAAC,IAAI,CAAC;IACtBI,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf;QAAI,CAAC;MAC9B,CAAC,CAAC;MAEF,MAAMgB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBb,eAAe,CAACW,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC;MAClC,CAAC,MAAM;QACLZ,QAAQ,CAAC,wCAAwC,CAAC;MACpD;IACF,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZb,QAAQ,CAAC,oCAAoC,CAAC;IAChD,CAAC,SAAS;MACRJ,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE3B,GAAI;MACX4B,QAAQ,EAAGC,CAAC,IAAK5B,MAAM,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACxCI,WAAW,EAAC;IAA0B;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACF5B,OAAA;MAAQmC,OAAO,EAAExB,cAAe;MAACyB,QAAQ,EAAE/B,aAAc;MAAAmB,QAAA,EACtDnB,aAAa,GAAG,gBAAgB,GAAG;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAERnB,KAAK,iBAAIT,OAAA;MAAGqC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEhDrB,YAAY,iBACXP,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClC5B,OAAA;QAAGuC,IAAI,EAAEhC,YAAa;QAACiC,QAAQ;QAAAhB,QAAA,EAAC;MAEhC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA/DID,eAAe;AAAAwC,EAAA,GAAfxC,eAAe;AAiErB,eAAeA,eAAe;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}