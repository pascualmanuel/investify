{"ast":null,"code":"var _jsxFileName = \"/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  var _dolar$blue, _dolar$blue2;\n  const [amount, setAmount] = useState(\"\");\n  const [dolar, setDolar] = useState([]);\n  const [historicalRate, setHistoricalRate] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  useEffect(() => {\n    // Fetch current exchange rate\n    fetch(\"https://api.bluelytics.com.ar/v2/latest\").then(response => response.json()).then(data => setDolar(data));\n  }, []);\n  const exchangeRateSell = dolar === null || dolar === void 0 ? void 0 : (_dolar$blue = dolar.blue) === null || _dolar$blue === void 0 ? void 0 : _dolar$blue.value_sell;\n  const exchangeRateBuy = dolar === null || dolar === void 0 ? void 0 : (_dolar$blue2 = dolar.blue) === null || _dolar$blue2 === void 0 ? void 0 : _dolar$blue2.value_buy;\n  const formatNumber = num => {\n    return num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n  const handleChange = e => {\n    let value = e.target.value.replace(/\\./g, \"\");\n    if (value === \"0\") {\n      setAmount(\"\");\n    } else if (!isNaN(value)) {\n      value = parseInt(value).toString();\n      setAmount(formatNumber(value));\n    }\n  };\n  const calculateAmount = (value, rate) => {\n    const numericValue = value ? parseInt(value.replace(/\\./g, \"\")) : 0;\n    if (numericValue === 0) return rate ? formatNumber(rate.toFixed(0)) : \"0\";\n    return (numericValue * rate).toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    if (date) {\n      const formattedDate = date.toISOString().split(\"T\")[0];\n\n      // Fetch historical exchange rate for selected date\n      fetch(`https://api.bluelytics.com.ar/v2/historical?day=${formattedDate}`).then(response => response.json()).then(data => {\n        if (data && data.blue) {\n          setHistoricalRate(data.blue);\n        } else {\n          setHistoricalRate(null);\n        }\n      });\n    } else {\n      setHistoricalRate(null); // Clear historical rate if date is cleared\n    }\n  };\n  const currentDate = new Date().toDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: amount,\n      onChange: handleChange,\n      placeholder: \"USD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), currentDate, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [amount || \"1\", \" USD Compra = \", calculateAmount(amount, exchangeRateBuy), \" \", \"ARS\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), amount || \"1\", \" USD Venta = \", calculateAmount(amount, exchangeRateSell), \" \", \"ARS\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Date for Historical Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: handleDateChange,\n      dateFormat: \"yyyy-MM-dd\",\n      maxDate: new Date(),\n      placeholderText: \"Select a date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), historicalRate && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Exchange Rate on \", selectedDate.toISOString().split(\"T\")[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Compra: \", formatNumber(historicalRate.value_buy.toFixed(0)), \" ARS\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), \"Venta: \", formatNumber(historicalRate.value_sell.toFixed(0)), \" ARS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"aJ5NpbyOGI1UWtUr3vW+GAH0Nlc=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsxDEV","_jsxDEV","CurrencyConverter","_s","_dolar$blue","_dolar$blue2","amount","setAmount","dolar","setDolar","historicalRate","setHistoricalRate","selectedDate","setSelectedDate","fetch","then","response","json","data","exchangeRateSell","blue","value_sell","exchangeRateBuy","value_buy","formatNumber","num","replace","handleChange","e","value","target","isNaN","parseInt","toString","calculateAmount","rate","numericValue","toFixed","handleDateChange","date","formattedDate","toISOString","split","currentDate","Date","toDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","selected","dateFormat","maxDate","placeholderText","_c","$RefreshReg$"],"sources":["/Users/manuelpascual/Documents/sites/investify/src/Components/CurrencyConverter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst CurrencyConverter = () => {\n  const [amount, setAmount] = useState(\"\");\n  const [dolar, setDolar] = useState([]);\n  const [historicalRate, setHistoricalRate] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  useEffect(() => {\n    // Fetch current exchange rate\n    fetch(\"https://api.bluelytics.com.ar/v2/latest\")\n      .then((response) => response.json())\n      .then((data) => setDolar(data));\n  }, []);\n\n  const exchangeRateSell = dolar?.blue?.value_sell;\n  const exchangeRateBuy = dolar?.blue?.value_buy;\n\n  const formatNumber = (num) => {\n    return num.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n\n  const handleChange = (e) => {\n    let value = e.target.value.replace(/\\./g, \"\");\n    if (value === \"0\") {\n      setAmount(\"\");\n    } else if (!isNaN(value)) {\n      value = parseInt(value).toString();\n      setAmount(formatNumber(value));\n    }\n  };\n\n  const calculateAmount = (value, rate) => {\n    const numericValue = value ? parseInt(value.replace(/\\./g, \"\")) : 0;\n    if (numericValue === 0) return rate ? formatNumber(rate.toFixed(0)) : \"0\";\n    return (numericValue * rate)\n      .toFixed(0)\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n\n    if (date) {\n      const formattedDate = date.toISOString().split(\"T\")[0];\n\n      // Fetch historical exchange rate for selected date\n      fetch(`https://api.bluelytics.com.ar/v2/historical?day=${formattedDate}`)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data && data.blue) {\n            setHistoricalRate(data.blue);\n          } else {\n            setHistoricalRate(null);\n          }\n        });\n    } else {\n      setHistoricalRate(null); // Clear historical rate if date is cleared\n    }\n  };\n\n  const currentDate = new Date().toDateString();\n\n  return (\n    <div>\n      <h2>Currency Converter</h2>\n      <input\n        type=\"text\"\n        value={amount}\n        onChange={handleChange}\n        placeholder=\"USD\"\n      />\n      <br />\n      <br />\n      {currentDate}\n\n      <p>\n        {amount || \"1\"} USD Compra = {calculateAmount(amount, exchangeRateBuy)}{\" \"}\n        ARS\n        <br />\n        <br />\n        {amount || \"1\"} USD Venta = {calculateAmount(amount, exchangeRateSell)}{\" \"}\n        ARS\n      </p>\n\n      <h3>Select Date for Historical Rate</h3>\n      <DatePicker\n        selected={selectedDate}\n        onChange={handleDateChange}\n        dateFormat=\"yyyy-MM-dd\"\n        maxDate={new Date()}\n        placeholderText=\"Select a date\"\n      />\n\n      {historicalRate && (\n        <div>\n          <h4>Exchange Rate on {selectedDate.toISOString().split(\"T\")[0]}</h4>\n          <p>\n            Compra: {formatNumber(historicalRate.value_buy.toFixed(0))} ARS\n            <br />\n            Venta: {formatNumber(historicalRate.value_sell.toFixed(0))} ARS\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CurrencyConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}